{"version":3,"sources":["components/Display/Display.module.scss","components/Button/Button.module.scss","containers/MainKeyboard/MainKeyboard.module.scss","App.module.scss","components/Display/Display.tsx","components/Button/Button.tsx","containers/MainKeyboard/MainKeyboard.tsx","stores/CalculatorStore.ts","App.tsx","stores/gerRootStores.ts","index.tsx"],"names":["module","exports","style","bemCssModules","DisplayStyles","DisplayConsumer","inject","observer","calculatorStore","displayRef","useRef","useState","Date","time","setTime","useEffect","current","displayElement","setInterval","getMinutes","className","getHours","toString","padStart","ref","ButtonStyles","Button","props","modifiers","isRight","isZero","isTop","onClick","event","content","MainKeyboardStyles","MainKeyboardConsumer","clear","invertNumber","percent","divide","memoryClear","memoryRead","memoryAdd","memoryMinus","concatenateNumber","multiplication","substraction","addition","addComma","equal","CalculatorStore","memoryValue","displayValue","previousValue","selectedFunction","isFunctionDone","repeatedValue","wasEqualClicked","wasSpecialFunctionClicked","display","target","textContent","Number","changeDisplayValue","valueToDisplay","Math","abs","includes","undefined","hasRepetedValue","callPreviousFunctionAndChangeIt","handleSecondClickOnFunction","getValuesToCalculations","newValue","setRepeatedValue","afterNewValueCalculation","callSpecialFunction","value","this","previousFunction","isNoValue","element","setSettings","modifierDelimiter","AppStyles","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.560bf30f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dispaly\":\"Display_dispaly__OBDo5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3tCN6\",\"button--is-right\":\"Button_button--is-right__1EG5h\",\"button--is-top\":\"Button_button--is-top__br_z3\",\"button--is-zero\":\"Button_button--is-zero__qTON3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-keyboard\":\"MainKeyboard_main-keyboard__3sqER\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2p8Tw\"};","import React, { useRef, useEffect, useState } from 'react';\r\nimport { default as bemCssModules } from 'bem-css-modules';\r\nimport { CalculatorStore } from '../../stores/CalculatorStore';\r\nimport { default as DisplayStyles } from './Display.module.scss';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { FaBatteryHalf, FaSignal } from \"react-icons/fa\";\r\n\r\ninterface DisplayProps {\r\n\tcalculatorStore?: CalculatorStore;\r\n}\r\n\r\nconst style = bemCssModules(DisplayStyles);\r\n\r\nconst Display: React.FC<DisplayProps> = ({ calculatorStore }) => {\r\n\tconst displayRef = useRef<HTMLDivElement>(null);\r\n\tconst [time, setTime] = useState(new Date());\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (displayRef.current && calculatorStore) {\r\n\t\t\t\tcalculatorStore.displayElement = displayRef.current;\r\n\t\t\t}\r\n\t\t},\r\n\t\t[displayRef, calculatorStore]\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetInterval(() => setTime(new Date()), 1000);\r\n\t}, [new Date().getMinutes()]);\r\n\r\n\treturn (\r\n\t\t<div className={style()}>\r\n\t\t\t<div>\r\n\t\t\t\t<time>{time\r\n\t\t\t\t\t.getHours()\r\n\t\t\t\t\t.toString()\r\n\t\t\t\t\t.padStart(2, \"0\")}:{\r\n\t\t\t\t\t\ttime\r\n\t\t\t\t\t\t\t.getMinutes()\r\n\t\t\t\t\t\t\t.toString()\r\n\t\t\t\t\t\t\t.padStart(2, \"0\")\r\n\t\t\t\t\t}\r\n\t\t\t\t</time>\r\n\t\t\t\t<h4>\r\n\t\t\t\t\t<FaSignal />\r\n\t\t\t\t\t<span>5G</span>\r\n\t\t\t\t\t<FaBatteryHalf />\r\n\t\t\t\t</h4>\r\n\t\t\t</div>\r\n\t\t\t<p ref={displayRef}>0</p>\r\n\t\t</div >\r\n\t);\r\n};\r\n\r\nconst DisplayConsumer = inject('calculatorStore')(observer(Display));\r\n\r\nexport { DisplayConsumer as Display };","import React from 'react';\r\nimport { default as bemCssModules } from 'bem-css-modules';\r\nimport { default as ButtonStyles } from './Button.module.scss';\r\n\r\ntype TCalculatorFunction = () => void;\r\ntype TConcatenateFunction = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\r\n\r\ninterface ButtonProps {\r\n\tcontent: string;\r\n\tisRight?: boolean;\r\n\tisZero?: boolean;\r\n\tisTop?: boolean;\r\n\tonClick: TCalculatorFunction | TConcatenateFunction;\r\n}\r\n\r\nconst style = bemCssModules(ButtonStyles);\r\n\r\nexport const Button: React.FC<ButtonProps> = props => {\r\n\tconst modifiers = {\r\n\t\t'is-right': props.isRight,\r\n\t\t'is-zero': props.isZero,\r\n\t\t'is-top': props.isTop\r\n\t};\r\n\r\n\tconst onClickHandler = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\r\n\t\tprops.onClick(event);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<button\r\n\t\t\tclassName={style(modifiers)}\r\n\t\t\tonClick={onClickHandler}\r\n\t\t>\r\n\t\t\t{props.content}\r\n\t\t</button>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport { default as bemCssModules } from 'bem-css-modules';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { Button } from '../../components/Button/Button';\r\nimport { CalculatorStore } from '../../stores/CalculatorStore';\r\nimport { default as MainKeyboardStyles } from './MainKeyboard.module.scss';\r\n\r\ninterface MainKeyboardProps {\r\n\tcalculatorStore?: CalculatorStore;\r\n}\r\n\r\nconst style = bemCssModules(MainKeyboardStyles);\r\n\r\nconst MainKeyboard: React.FC<MainKeyboardProps> = ({ calculatorStore }) => {\r\n\tif (!calculatorStore) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={style()}>\r\n\t\t\t<Button content=\"AC\" isTop onClick={calculatorStore.clear} />\r\n\t\t\t<Button content=\"±\" isTop onClick={calculatorStore.invertNumber} />\r\n\t\t\t<Button content=\"%\" isTop onClick={calculatorStore.percent} />\r\n\t\t\t<Button content=\"÷\" isRight onClick={calculatorStore.divide} />\r\n\t\t\t<Button content=\"mc\" onClick={calculatorStore.memoryClear} />\r\n\t\t\t<Button content=\"mr\" onClick={calculatorStore.memoryRead} />\r\n\t\t\t<Button content=\"m+\" onClick={calculatorStore.memoryAdd} />\r\n\t\t\t<Button content=\"m-\" isRight onClick={calculatorStore.memoryMinus} />\r\n\t\t\t<Button content=\"7\" onClick={event => calculatorStore.concatenateNumber(event)} />\r\n\t\t\t<Button content=\"8\" onClick={event => calculatorStore.concatenateNumber(event)} />\r\n\t\t\t<Button content=\"9\" onClick={event => calculatorStore.concatenateNumber(event)} />\r\n\t\t\t<Button content=\"×\" isRight onClick={calculatorStore.multiplication} />\r\n\t\t\t<Button content=\"4\" onClick={event => calculatorStore.concatenateNumber(event)} />\r\n\t\t\t<Button content=\"5\" onClick={event => calculatorStore.concatenateNumber(event)} />\r\n\t\t\t<Button content=\"6\" onClick={event => calculatorStore.concatenateNumber(event)} />\r\n\t\t\t<Button content=\"-\" isRight onClick={calculatorStore.substraction} />\r\n\t\t\t<Button content=\"1\" onClick={event => calculatorStore.concatenateNumber(event)} />\r\n\t\t\t<Button content=\"2\" onClick={event => calculatorStore.concatenateNumber(event)} />\r\n\t\t\t<Button content=\"3\" onClick={event => calculatorStore.concatenateNumber(event)} />\r\n\t\t\t<Button content=\"+\" isRight onClick={calculatorStore.addition} />\r\n\t\t\t<Button content=\"0\" isZero onClick={event => calculatorStore.concatenateNumber(event)} />\r\n\t\t\t<Button content=\",\" onClick={calculatorStore.addComma} />\r\n\t\t\t<Button content=\"=\" isRight onClick={calculatorStore.equal} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst MainKeyboardConsumer = inject('calculatorStore')(observer(MainKeyboard));\r\n\r\nexport { MainKeyboardConsumer as MainKeyboard };","type TSelectedFunction = (\r\n  event?: React.MouseEvent,\r\n  hasRepeatedValue?: boolean\r\n) => void;\r\n\r\nexport class CalculatorStore {\r\n  private memoryValue = 0;\r\n  private displayValue: string | null = \"0\";\r\n  private previousValue: number | null = null;\r\n  private selectedFunction: TSelectedFunction | null = null;\r\n  private isFunctionDone = false;\r\n  private repeatedValue = 0;\r\n  private wasEqualClicked = false;\r\n  private wasSpecialFunctionClicked = false;\r\n  private display!: HTMLDivElement;\r\n\r\n  public set displayElement(element: HTMLDivElement) {\r\n    this.display = element;\r\n  }\r\n\r\n  public concatenateNumber = (\r\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n  ): void => {\r\n    this.displayValue =\r\n      this.displayValue === null ||\r\n      this.displayValue === \"0\" ||\r\n      this.wasSpecialFunctionClicked\r\n        ? (<HTMLButtonElement>event.target).textContent\r\n        : `${this.displayValue}${(event.target as HTMLElement).textContent}`;\r\n\r\n    if (this.wasEqualClicked) {\r\n      this.previousValue = null;\r\n      this.displayValue = (event.target as HTMLElement).textContent;\r\n      this.repeatedValue = 0;\r\n      this.wasEqualClicked = false;\r\n    }\r\n\r\n    this.isFunctionDone = false;\r\n    this.wasSpecialFunctionClicked = false;\r\n    this.display.textContent = this.displayValue;\r\n  };\r\n\r\n  public memoryAdd = (): void => {\r\n    this.wasSpecialFunctionClicked = true;\r\n    this.memoryValue = this.memoryValue + Number(this.displayValue);\r\n  };\r\n\r\n  public memoryClear = (): void => {\r\n    this.wasSpecialFunctionClicked = true;\r\n    this.memoryValue = 0;\r\n  };\r\n\r\n  public memoryMinus = (): void => {\r\n    this.wasSpecialFunctionClicked = true;\r\n    this.memoryValue = this.memoryValue - Number(this.displayValue);\r\n  };\r\n\r\n  public memoryRead = (): void => {\r\n    this.wasSpecialFunctionClicked = true;\r\n    this.changeDisplayValue(this.memoryValue.toString());\r\n  };\r\n\r\n  public clear = (): void => {\r\n    this.previousValue = null;\r\n    this.selectedFunction = null;\r\n    this.changeDisplayValue(null);\r\n  };\r\n\r\n  public invertNumber = (): void => {\r\n    const displayValue = Number(this.displayValue);\r\n    const valueToDisplay = displayValue\r\n      ? (displayValue * -1).toString()\r\n      : Math.abs(displayValue).toString();\r\n\r\n    this.changeDisplayValue(valueToDisplay);\r\n  };\r\n\r\n  public addComma = (): void => {\r\n    if (!this.display.textContent?.includes(\".\")) {\r\n      this.changeDisplayValue(\r\n        `${this.displayValue ? this.displayValue : \"0\"}.`\r\n      );\r\n    }\r\n  };\r\n\r\n  public equal = (): void => {\r\n    this.isFunctionDone = false;\r\n    if (!this.wasEqualClicked && this.selectedFunction) {\r\n      this.selectedFunction(undefined, false);\r\n    } else if (this.selectedFunction) {\r\n      this.selectedFunction(undefined, true);\r\n    }\r\n\r\n    this.wasEqualClicked = true;\r\n    this.displayValue = this.display.textContent;\r\n  };\r\n\r\n  public addition = (\r\n    event?: React.MouseEvent,\r\n    hasRepetedValue?: boolean\r\n  ): void => {\r\n    this.callPreviousFunctionAndChangeIt(this.addition, hasRepetedValue);\r\n    if (this.isFunctionDone) {\r\n      this.handleSecondClickOnFunction();\r\n      return;\r\n    }\r\n\r\n    const [displayValue, previousValue] = this.getValuesToCalculations(\r\n      hasRepetedValue\r\n    );\r\n    const newValue = displayValue + Number(previousValue);\r\n\r\n    this.setRepeatedValue(newValue, hasRepetedValue);\r\n    this.afterNewValueCalculation(newValue);\r\n  };\r\n\r\n  public substraction = (\r\n    event?: React.MouseEvent,\r\n    hasRepetedValue?: boolean\r\n  ): void => {\r\n    this.callPreviousFunctionAndChangeIt(this.substraction, hasRepetedValue);\r\n    if (this.isFunctionDone) {\r\n      this.handleSecondClickOnFunction();\r\n      return;\r\n    }\r\n\r\n    const [displayValue, previousValue] = this.getValuesToCalculations(\r\n      hasRepetedValue\r\n    );\r\n    let newValue;\r\n\r\n    if (this.previousValue !== null) {\r\n      newValue = hasRepetedValue\r\n        ? displayValue - this.repeatedValue\r\n        : Number(previousValue) - displayValue;\r\n\r\n      this.setRepeatedValue(newValue, hasRepetedValue);\r\n    }\r\n\r\n    this.afterNewValueCalculation(newValue ? newValue : null);\r\n  };\r\n\r\n  public multiplication = (\r\n    event?: React.MouseEvent,\r\n    hasRepetedValue?: boolean\r\n  ): void => {\r\n    this.callPreviousFunctionAndChangeIt(this.multiplication, hasRepetedValue);\r\n    if (this.isFunctionDone) {\r\n      this.handleSecondClickOnFunction();\r\n\r\n      return;\r\n    }\r\n\r\n    const [displayValue, previousValue] = this.getValuesToCalculations(\r\n      hasRepetedValue\r\n    );\r\n    const newValue = displayValue * Number(previousValue);\r\n\r\n    this.setRepeatedValue(newValue, hasRepetedValue);\r\n    this.afterNewValueCalculation(newValue);\r\n  };\r\n\r\n  public divide = (\r\n    event?: React.MouseEvent,\r\n    hasRepetedValue?: boolean\r\n  ): void => {\r\n    this.callPreviousFunctionAndChangeIt(this.divide, hasRepetedValue);\r\n    if (this.isFunctionDone) {\r\n      this.handleSecondClickOnFunction();\r\n\r\n      return;\r\n    }\r\n\r\n    const [displayValue, previousValue] = this.getValuesToCalculations(\r\n      hasRepetedValue\r\n    );\r\n    const newValue = hasRepetedValue\r\n      ? displayValue / this.repeatedValue\r\n      : this.previousValue === 0\r\n      ? displayValue\r\n      : Number(previousValue) / displayValue;\r\n\r\n    this.setRepeatedValue(newValue, hasRepetedValue);\r\n    this.afterNewValueCalculation(newValue);\r\n  };\r\n  public percent = (): void => {\r\n    this.callSpecialFunction(\r\n      (Number(this.previousValue) * Number(this.displayValue)) / 100\r\n    );\r\n  };\r\n\r\n  private callSpecialFunction(value: number) {\r\n    this.wasEqualClicked = false;\r\n    this.wasSpecialFunctionClicked = true;\r\n    this.changeDisplayValue(value.toString());\r\n  }\r\n\r\n  private callPreviousFunctionAndChangeIt(\r\n    previousFunction: TSelectedFunction | null,\r\n    hasRepetedValue?: boolean\r\n  ): void {\r\n    if (this.selectedFunction !== previousFunction && this.selectedFunction) {\r\n      this.selectedFunction(undefined, hasRepetedValue);\r\n    }\r\n\r\n    this.selectedFunction = previousFunction;\r\n  }\r\n\r\n  private handleSecondClickOnFunction(): void {\r\n    this.setRepeatedValue(this.previousValue, null);\r\n    this.displayValue = \"0\";\r\n    this.wasEqualClicked = false;\r\n  }\r\n\r\n  private afterNewValueCalculation(newValue: number | null): void {\r\n    this.isFunctionDone = true;\r\n    this.wasEqualClicked = false;\r\n    this.displayValue = null;\r\n    this.display.textContent =\r\n      this.previousValue !== null\r\n        ? Number(newValue).toString()\r\n        : this.display.textContent;\r\n    this.previousValue =\r\n      this.previousValue !== null ? newValue : Number(this.display.textContent);\r\n  }\r\n\r\n  private setRepeatedValue(\r\n    newValue: number | null,\r\n    hasRepetedValue?: boolean | null\r\n  ): void {\r\n    if (hasRepetedValue === null) {\r\n      this.repeatedValue = Number(newValue);\r\n\r\n      return;\r\n    }\r\n\r\n    this.repeatedValue = hasRepetedValue\r\n      ? this.repeatedValue\r\n      : this.wasEqualClicked\r\n      ? Number(newValue)\r\n      : Number(this.display.textContent);\r\n  }\r\n\r\n  private getValuesToCalculations(\r\n    hasRepetedValue?: boolean\r\n  ): [number, number | null] {\r\n    const displayValue = Number(this.display.textContent);\r\n    const previousValue = hasRepetedValue\r\n      ? this.repeatedValue\r\n      : this.previousValue;\r\n    return [displayValue, previousValue];\r\n  }\r\n\r\n  private changeDisplayValue(value: string | null): void {\r\n    const isNoValue = value === null || value === \"\";\r\n    this.displayValue = isNoValue ? null : value;\r\n    if (this.wasEqualClicked) {\r\n      this.previousValue = Number(value);\r\n    }\r\n    this.display.textContent = value;\r\n  }\r\n}\r\n","import React from 'react';\nimport { default as bemCssModules } from 'bem-css-modules';\nimport { Provider } from 'mobx-react';\nimport { Display } from './components/Display/Display';\nimport { MainKeyboard } from './containers/MainKeyboard/MainKeyboard';\nimport { default as AppStyles } from './App.module.scss';\nimport { getRootStores } from './stores/gerRootStores';\n\nbemCssModules.setSettings({\n\tmodifierDelimiter: '--'\n});\n\nconst style = bemCssModules(AppStyles);\n\nfunction App() {\n\treturn (\n\t\t<Provider {...getRootStores()}>\n\t\t\t<div className={style()}>\n\t\t\t\t<Display />\n\t\t\t\t<MainKeyboard />\n\t\t\t\t<div className='underline'></div>\n\t\t\t</div>\n\t\t</Provider>\n\t);\n}\n\nexport default App;","import { CalculatorStore } from \"./CalculatorStore\";\r\n\r\ninterface IRootStore {\r\n  calculatorStore: CalculatorStore;\r\n}\r\n\r\nexport const getRootStores = (): IRootStore => ({\r\n  calculatorStore: new CalculatorStore(),\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}